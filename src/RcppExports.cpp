// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// change_num_notes__
int change_num_notes__(NumericVector x, NumericVector y);
RcppExport SEXP _hvr_change_num_notes__(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(change_num_notes__(x, y));
    return rcpp_result_gen;
END_RCPP
}
// change_num_notes_
IntegerVector change_num_notes_(List contexts, NumericVector continuation);
RcppExport SEXP _hvr_change_num_notes_(SEXP contextsSEXP, SEXP continuationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type contexts(contextsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type continuation(continuationSEXP);
    rcpp_result_gen = Rcpp::wrap(change_num_notes_(contexts, continuation));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hvr_change_num_notes__", (DL_FUNC) &_hvr_change_num_notes__, 2},
    {"_hvr_change_num_notes_", (DL_FUNC) &_hvr_change_num_notes_, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_hvr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
